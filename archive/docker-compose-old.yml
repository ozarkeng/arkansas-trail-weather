services:
  # PostgreSQL with PostGIS extension
  postgres-gis:
    image: postgis/postgis:16-3.4
    container_name: postgres-gis
    environment:
      - POSTGRES_USER=${POSTGRES_ROOT_USER}
      - POSTGRES_PASSWORD=${POSTGRES_ROOT_PASSWORD}
      - POSTGRES_DB=${POSTGRES_ROOT_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Airflow's own metadata database (persists DAG runs, task instances, etc.)
  airflow-postgres:
    image: postgres:13
    container_name: airflow-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_AIRFLOW_USER}
      - POSTGRES_PASSWORD=${POSTGRES_AIRFLOW_PASSWORD}
      - POSTGRES_DB=${POSTGRES_AIRFLOW_DB}
    volumes:
      - airflow_db_data:/var/lib/postgresql/data

  # Airflow's message queue (in-memory broker)
  redis:
    image: redis:latest
    container_name: redis

  # Airflow's initialization service (sets up the database and creates an admin user)
  airflow-init:
    build: ./airflow
    depends_on:
      - airflow-postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@airflow-postgres/${POSTGRES_AIRFLOW_DB}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@airflow-postgres/${POSTGRES_AIRFLOW_DB}
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
    command: >
      bash -c "
        airflow db init &&
        airflow users create --role Admin --username ${POSTGRES_AIRFLOW_USER} --email admin@example.com --firstname admin --lastname admin --password ${POSTGRES_AIRFLOW_PASSWORD} 
      "

  # Airflow's web interface (UI)
  airflow-webserver:
    build: ./airflow
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-init
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src # <-- IMPORTANT: Mount your src directory
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@airflow-postgres/${POSTGRES_AIRFLOW_DB}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@airflow-postgres/${POSTGRES_AIRFLOW_DB}
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
      - AIRFLOW__API__AUTH_BACKEND=airflow.api.auth.backend.basic_auth
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
    command: webserver

  # Airflow's task scheduler
  airflow-scheduler:
    build: ./airflow
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-init
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src # mount whatever directory you keep your source code / pipelines in
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@airflow-postgres/${POSTGRES_AIRFLOW_DB}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@airflow-postgres/${POSTGRES_AIRFLOW_DB}
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
      - AIRFLOW_UID=${AIRFLOW_UID}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
    command: scheduler

  # Airflow's task worker (Celery worker)
  airflow-worker:
    build: ./airflow
    container_name: airflow-worker
    restart: always
    depends_on:
      - airflow-init
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src # mount whatever directory you keep your source code / pipelines in
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@airflow-postgres/${POSTGRES_AIRFLOW_DB}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_AIRFLOW_USER}:${POSTGRES_AIRFLOW_PASSWORD}@airflow-postgres/${POSTGRES_AIRFLOW_DB}
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/1
      - AIRFLOW_UID=${AIRFLOW_UID}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_ROOT_USER}
      - POSTGRES_PASSWORD=${POSTGRES_ROOT_PASSWORD}
      - POSTGRES_DB=${POSTGRES_ROOT_DB}
    command: celery worker

volumes:
  postgres_data:
  airflow_db_data:
